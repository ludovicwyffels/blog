{"version":3,"sources":["webpack:///./src/components/header/SiteNavLogo.tsx","webpack:///./src/pages/404.tsx","webpack:///./src/styles/colors.ts","webpack:///./src/styles/shared.ts","webpack:///./src/website-config.ts","webpack:///./src/components/Wrapper.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./src/favicon.ico"],"names":["SiteNavLogoStyles","name","styles","SiteNavLogo","Object","core_browser_esm","gatsby_browser_entry","query","render","className","css","to","config","title","data","_296977140","SiteNavCenter","styled_base_browser_esm","target","ErrorTemplate","ErrorCode","ErrorDescription","colors","midgrey","ErrorLink","pageQuery","NotFoundPage","props","edges","allMarkdownRemark","layouts","Wrapper","css_browser_esm","SiteHeader","outer","header_SiteNavLogo","id","inner","style","textAlign","PostFeed","map","_ref","node","PostCard","key","fields","slug","post","__webpack_require__","d","__webpack_exports__","blue","green","purple","yellow","red","darkgrey","lightgrey","whitegrey","pink","brown","SiteMain","SiteTitle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","SiteDescription","PostFeedRaise","SocialLink","darken","SiteHeaderContent","AuthorProfileImage","lighten","siteTitle","description","coverImage","logo","lang","siteUrl","github","gitlab","showSubscribe","StyledWrapper","children","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","GlobalStyles","IndexLayout","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","rel","href","favicon","type","PostCardStyles","PostCardImageLink","PostCardImage","PostCardContent","PostCardContentLink","PostCardTags","PostCardTitle","PostCardExcerpt","PostCardMeta","AuthorList","ReadingTime","frontmatter","image","gatsby__WEBPACK_IMPORTED_MODULE_2__","childImageSharp","fluid","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","alt","height","tags","subtitle","timeToRead","module","exports","p"],"mappings":"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","file":"component---src-pages-404-tsx-8531118607e1919f9337.js","sourcesContent":["import { graphql, Link, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport { css } from '@emotion/core';\n\nimport config from '../../website-config';\n\nconst SiteNavLogoStyles = css`\n  flex-shrink: 0;\n  display: block;\n  margin-right: 20px;\n  padding: 10px 0;\n  color: #fff;\n  font-size: 1.5rem;\n  line-height: 1em;\n  font-weight: bold;\n  letter-spacing: -0.5px;\n\n  :hover {\n    text-decoration: none;\n  }\n\n  img {\n    display: block;\n    width: auto;\n    height: 21px;\n  }\n`;\n\nconst SiteNavLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query HeadingQuery {\n        logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={() => (\n      <Link className=\"site-nav-logo\" css={SiteNavLogoStyles} to=\"/\">\n        {\n          config.title\n        }\n      </Link>\n    )}\n  />\n);\n\nexport default SiteNavLogo;\n","import { graphql, Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport SiteNavLogo from '../components/header/SiteNavLogo';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, PostFeed, SiteHeader } from '../styles/shared';\nimport { PageContext } from '../templates/post';\n//import Subscribe from '../components/subscribe/Subscribe';\n\nconst SiteNavCenter = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  .site-nav-logo {\n    margin-right: 0;\n  }\n`;\n\nconst ErrorTemplate = css`\n  padding: 7vw 4vw;\n`;\n\nconst ErrorCode = styled.h1`\n  margin: 0;\n  font-size: 12vw;\n  line-height: 1em;\n  letter-spacing: -5px;\n  opacity: 0.3;\n`;\n\nconst ErrorDescription = styled.p`\n  margin: 0;\n  color: ${colors.midgrey};\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 400;\n`;\n\nconst ErrorLink = css`\n  display: inline-block;\n  margin-top: 5px;\n`;\n\ninterface NotFoundTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: PageContext;\n      }[];\n    };\n  };\n}\n\nconst NotFoundPage: React.FunctionComponent<NotFoundTemplateProps> = props => {\n  const { edges } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout>\n      <Wrapper>\n        <header css={[SiteHeader, outer]}>\n          <div className=\"inner\">\n            <SiteNavCenter>\n              <SiteNavLogo />\n            </SiteNavCenter>\n          </div>\n        </header>\n        <main id=\"site-main\" css={[ErrorTemplate, outer]}>\n          <div css={inner}>\n            <section style={{ textAlign: 'center' }}>\n              <ErrorCode>404</ErrorCode>\n              <ErrorDescription>Page not found</ErrorDescription>\n              <Link css={ErrorLink} to={''}>\n                Go to the front page →\n              </Link>\n              {/* <Subscribe color={'white'} /> */}\n            </section>\n          </div>\n        </main>\n        <aside css={outer}>\n          <div css={inner}>\n            <div css={PostFeed}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </aside>\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","export const colors = {\n  blue: '#3eb0ef',\n  green: '#a4d037',\n  purple: '#ad26b4',\n  yellow: '#fecd35',\n  red: '#f05230',\n  darkgrey: '#15171A',\n  midgrey: '#738a94',\n  lightgrey: '#c5d2d9',\n  whitegrey: '#e5eff5',\n  pink: '#fa3a57',\n  brown: '#a3821a',\n}","import { css } from '@emotion/core';\nimport styled from '@emotion/styled'\nimport { colors } from './colors';\nimport { darken, lighten } from 'polished';\n\nexport const outer = css`\n  position: relative;\n  padding: 0 4vw;\n`;\n\n// Centered content container blocks\nexport const inner = css`\n  margin: 0 auto;\n  max-width: 1040px;\n  width: 100%;\n`;\n\nexport const SiteMain = css`\n  z-index: 100;\n  flex-grow: 1;\n`;\n\nexport const SiteTitle = styled.h1`\n  z-index: 10;\n  margin: 0;\n  padding: 0;\n  font-size: 3.8rem;\n  font-weight: 700;\n`;\n\nexport const SiteDescription = styled.h2`\n  z-index: 10;\n  margin: 0;\n  padding: 5px 0;\n  font-size: 2.2rem;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nexport const PostFeed = css`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\nexport const PostFeedRaise = css`\n  @media (min-width: 900px) {\n    margin-top: -70px;\n    padding-top: 0;\n  }\n`;\n\nexport const SocialLink = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 10px;\n  color: #fff;\n  opacity: 0.8;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    height: 1.8rem;\n    fill: #fff;\n  }\n`;\n\nexport const SiteHeader = css`\n  position: relative;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background: ${darken('0.05', colors.darkgrey)} no-repeat center center;\n  background-size: cover;\n`;\n\nexport const SiteHeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10vw 4vw;\n  min-height: 200px;\n  max-height: 450px;\n  text-align: center;\n`;\n\nexport const SiteHeaderStyles = css`\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  z-index: 10;\n  display: block;\n  height: 80px;\n  background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 10;\n    display: block;\n    background: rgba(0, 0, 0, 0.18);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: auto;\n    left: 0;\n    z-index: 10;\n    display: block;\n    height: 80px;\n    background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n  }\n  @media (max-width: 700px) {\n    padding-right: 0;\n    padding-left: 0;\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n  margin-right: 15px;\n  width: 60px;\n  height: 60px;\n`;\n","export interface WebsiteConfig {\n  title: string;\n  siteTitle: string;\n  description: string;\n  coverImage: string;\n  logo: string;\n  /**\n   * Specifying a valid BCP 47 language helps screen readers announce text properly.\n   * See: https://dequeuniversity.com/rules/axe/2.2/valid-lang\n   */\n  lang: string;\n  /**\n   * blog full path, no ending slash!\n   */\n  siteUrl: string;\n  facebook?: string;\n  github?: string;\n  gitlab?: string;\n  twitter?: string;\n  /**\n   * hide or show all email subscribe boxes\n   */\n  showSubscribe: boolean;\n  /**\n   * create a list on mailchimp and then create an embeddable signup form. this is the form action\n   */\n  mailchimpAction?: string;\n  /**\n   * this is the hidden input field name\n   */\n  mailchimpName?: string;\n}\n\nconst config: WebsiteConfig = {\n  title: 'Code avec Ludo',\n  siteTitle: 'Code avec Ludo',\n  description: 'Trouvez des articles et des tutoriels sur Node, Angular, intégration continue, docker, et plus ...',\n  coverImage: 'img/blog-cover.jpg',\n  logo: 'img/ghost-logo.png',\n  lang: 'fr',\n  siteUrl: 'https://ludovicwyffels.github.io',\n  github: 'https://github.com/ludovicwyffels',\n  gitlab: 'https://gitlab.com/ludovic.wyffels',\n  // twitter: 'https://twitter.com/WYFFELSLudovic',\n  showSubscribe: false,\n  // mailchimpAction: 'https://softwareontheroad.us20.list-manage.com/subscribe/post?u=337d8675485234c707e63777d&amp;id=14f1331817',\n  // mailchimpName: 'b_a81b6927ac288c81b0b7f3a0f_7d717b7d75',\n};\n\nexport default config;\n","import * as React from 'react';\nimport styled from '@emotion/styled'\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface WrapperProps {\n  className?: string;\n}\n\nconst Wrapper: React.FunctionComponent<WrapperProps> = ({ children, className }) => (\n  <StyledWrapper className={className}>{children}</StyledWrapper>\n);\n\nexport default Wrapper;\n","import { Global, css } from '@emotion/core';\nimport { darken, lighten } from 'polished';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { colors } from '../styles/colors';\n// @ts-ignore\nimport favicon from '../../src/favicon.ico';\n\ninterface IndexProps {\n  className?: string;\n}\n\nconst GlobalStyles = css`\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  body {\n    line-height: 1;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  img {\n    max-width: 100%;\n  }\n  html {\n    box-sizing: border-box;\n    font-family: sans-serif;\n\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n  }\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n  a {\n    background-color: transparent;\n  }\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  i,\n  em,\n  dfn {\n    font-style: italic;\n  }\n  h1 {\n    margin: 0.67em 0;\n    font-size: 2em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    position: relative;\n    font-size: 75%;\n    line-height: 0;\n    vertical-align: baseline;\n  }\n  sup {\n    top: -0.5em;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  img {\n    border: 0;\n  }\n  svg:not(:root) {\n    overflow: hidden;\n  }\n  mark {\n    background-color: #fdffb6;\n  }\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    margin: 0;\n    color: inherit;\n    font: inherit;\n  }\n  button {\n    overflow: visible;\n    border: none;\n  }\n  button,\n  select {\n    text-transform: none;\n  }\n  button,\n  html input[type='button'],\n  input[type='reset'],\n  input[type='submit'] {\n    cursor: pointer;\n\n    -webkit-appearance: button;\n  }\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n  input {\n    line-height: normal;\n  }\n  input:focus {\n    outline: none;\n  }\n  input[type='checkbox'],\n  input[type='radio'] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  input[type='search'] {\n    box-sizing: content-box;\n\n    -webkit-appearance: textfield;\n  }\n  input[type='search']::-webkit-search-cancel-button,\n  input[type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  legend {\n    padding: 0;\n    border: 0;\n  }\n  textarea {\n    overflow: auto;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  td,\n  th {\n    padding: 0;\n  }\n\n  html {\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-size: 62.5%;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  body {\n    overflow-x: hidden;\n    color: ${darken('0.25', colors.midgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.5rem;\n    line-height: 1.6em;\n    font-weight: 400;\n    font-style: normal;\n    letter-spacing: 0;\n    text-rendering: optimizeLegibility;\n    background: #fff;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -moz-font-feature-settings: 'liga' on;\n  }\n\n  ::selection {\n    text-shadow: none;\n    background: ${lighten('0.3', colors.blue)};\n  }\n\n  hr {\n    position: relative;\n    display: block;\n    width: 100%;\n    margin: 2.5em 0 3.5em;\n    padding: 0;\n    height: 1px;\n    border: 0;\n    border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n  }\n\n  audio,\n  canvas,\n  iframe,\n  img,\n  svg,\n  video {\n    vertical-align: middle;\n  }\n\n  fieldset {\n    margin: 0;\n    padding: 0;\n    border: 0;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  p,\n  ul,\n  ol,\n  dl,\n  blockquote {\n    margin: 0 0 1.5em 0;\n  }\n\n  ol,\n  ul {\n    margin-top: -1em;\n    padding-left: 1.3em;\n    padding-right: 1.5em;\n  }\n\n  ol ol,\n  ul ul,\n  ul ol,\n  ol ul {\n    margin: 0.5em 0 1em;\n  }\n\n  ul {\n    list-style: disc;\n  }\n\n  ol {\n    list-style: decimal;\n  }\n\n  ul,\n  ol {\n    max-width: 100%;\n  }\n\n  li {\n    margin: 0.5em 0;\n    padding-left: 0.3em;\n    line-height: 1.6em;\n  }\n\n  dt {\n    float: left;\n    margin: 0 20px 0 0;\n    width: 120px;\n    color: ${colors.darkgrey};\n    font-weight: 500;\n    text-align: right;\n  }\n\n  dd {\n    margin: 0 0 5px 0;\n    text-align: left;\n  }\n\n  blockquote {\n    margin: 1.5em 0;\n    padding: 0 1.6em 0 1.6em;\n    border-left: ${colors.whitegrey} 0.5em solid;\n  }\n\n  blockquote p {\n    margin: 0.8em 0;\n    font-size: 1.2em;\n    font-weight: 300;\n  }\n\n  blockquote small {\n    display: inline-block;\n    margin: 0.8em 0 0.8em 1.5em;\n    font-size: 0.9em;\n    opacity: 0.8;\n  }\n\n  blockquote small:before {\n    content: '\\\\2014 \\\\00A0';\n  }\n\n  blockquote cite {\n    font-weight: bold;\n  }\n  blockquote cite a {\n    font-weight: normal;\n  }\n\n  a {\n    color: ${darken('0.05', colors.blue)};\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 0;\n    line-height: 1.15;\n    font-weight: 700;\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin: 0 0 0.5em 0;\n    font-size: 5rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h2 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 2rem;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 1.8rem;\n    }\n  }\n\n  h3 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.8rem;\n    font-weight: 500;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 1.7rem;\n    }\n  }\n\n  h4 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.6rem;\n    font-weight: 500;\n  }\n\n  h5 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  h6 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  body {\n    background: #f4f8fb;\n  }\n\n  \n\n`;\n\nconst IndexLayout: React.FunctionComponent<IndexProps> = props => {\n  return (\n    <div className={props.className}>\n      <Helmet>\n        <link rel=\"icon\" href={favicon} type=\"image/x-icon\" />\n      </Helmet>\n      <Global styles={GlobalStyles} />\n      {props.children}\n    </div>\n  );\n};\n\nexport default IndexLayout;\n","import { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\n// import { lighten } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\n\nconst PostCardStyles = css`\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  min-height: 300px;\n  background: #fff center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  transition: all 0.5s ease;\n\n  :hover {\n    box-shadow: rgba(39, 44, 49, 0.07) 8px 28px 50px, rgba(39, 44, 49, 0.04) 1px 6px 12px;\n    transition: all 0.4s ease;\n    transform: translate3D(0, -1px, 0) scale(1.02);\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  flex-grow: 1;\n  display: block;\n  padding: 25px 25px 0;\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardTags = styled.span`\n  display: block;\n  margin-bottom: 4px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1.15em;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin-top: 0;\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 0 25px 25px;\n`;\n\nconst AuthorList = styled.ul`\n  display: flex;\n  flex-wrap: wrap-reverse;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\n// const AuthorListItem = styled.li`\n//   position: relative;\n//   flex-shrink: 0;\n//   margin: 0;\n//   padding: 0;\n//\n//   :nth-of-type(1) {\n//     z-index: 10;\n//   }\n//   :nth-of-type(2) {\n//     z-index: 9;\n//   }\n//   :nth-of-type(3) {\n//     z-index: 8;\n//   }\n//   :nth-of-type(4) {\n//     z-index: 7;\n//   }\n//   :nth-of-type(5) {\n//     z-index: 6;\n//   }\n//   :nth-of-type(6) {\n//     z-index: 5;\n//   }\n//   :nth-of-type(7) {\n//     z-index: 4;\n//   }\n//   :nth-of-type(8) {\n//     z-index: 3;\n//   }\n//   :nth-of-type(9) {\n//     z-index: 2;\n//   }\n//   :nth-of-type(10) {\n//     z-index: 1;\n//   }\n//   :hover .author-name-tooltip {\n//     opacity: 1;\n//     transform: translateY(0px);\n//   }\n// `;\n//\n// const AuthorNameTooltip = styled.div`\n//   position: absolute;\n//   bottom: 105%;\n//   z-index: 999;\n//   display: block;\n//   padding: 2px 8px;\n//   color: white;\n//   font-size: 1.2rem;\n//   letter-spacing: 0.2px;\n//   white-space: nowrap;\n//   background: ${colors.darkgrey};\n//   border-radius: 3px;\n//   box-shadow: rgba(39, 44, 49, 0.08) 0 12px 26px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n//   opacity: 0;\n//   transition: all 0.3s cubic-bezier(0.4, 0.01, 0.165, 0.99);\n//   transform: translateY(6px);\n//   pointer-events: none;\n//\n//   @media (max-width: 650px) {\n//     display: none;\n//   }\n// `;\n//\n// const StaticAvatar = css`\n//   display: block;\n//   overflow: hidden;\n//   margin: 0 -5px;\n//   width: 34px;\n//   height: 34px;\n//   border: #fff 2px solid;\n//   border-radius: 100%;\n// `;\n//\n// const AuthorProfileImage = styled.img`\n//   display: block;\n//   width: 100%;\n//   height: 100%;\n//   background: ${lighten('0.1', colors.lightgrey)}\n//   border-radius: 100%;\n//   object-fit: cover;\n// `;\n\nconst ReadingTime = styled.span`\n  flex-shrink: 0;\n  margin-left: 20px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 33px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nexport interface PostCardProps {\n  post: PageContext;\n}\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({ post }) => {\n  return (\n    <article\n      className={`post-card ${!post.frontmatter.image ? 'no-image' : ''}`}\n      css={PostCardStyles}\n    >\n      {post.frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter.image &&\n              post.frontmatter.image.childImageSharp.fluid && (\n                <Img\n                  alt={`${post.frontmatter.title} cover image`}\n                  style={{ height: '100%' }}\n                  fluid={post.frontmatter.image.childImageSharp.fluid}\n                />\n              )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\n          <header className=\"post-card-header\">\n            {post.frontmatter.tags && <PostCardTags>{post.frontmatter.tags[0]}</PostCardTags>}\n            <PostCardTitle>{post.frontmatter.title}</PostCardTitle>\n          </header>\n          <PostCardExcerpt>\n            <p> { post.frontmatter.subtitle }</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <AuthorList>\n            {/*<AuthorListItem>\n              <AuthorNameTooltip className=\"author-name-tooltip\">\n                {post.frontmatter.author.id}\n              </AuthorNameTooltip>\n              <Link css={StaticAvatar} to={`/author/${_.kebabCase(post.frontmatter.author.id)}/`}>\n                <AuthorProfileImage\n                  src={post.frontmatter.author.avatar.children[0].fixed.src}\n                  alt={post.frontmatter.author.id}\n                />\n              </Link>\n            </AuthorListItem>*/}\n          </AuthorList>\n          <ReadingTime>{post.timeToRead > 9 ? post.timeToRead : post.timeToRead + 2} min read</ReadingTime>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nexport default PostCard;\n","module.exports = __webpack_public_path__ + \"static/favicon-36e47e74810a0d8c32a77f495c49cf8e.ico\";"],"sourceRoot":""}