{"version":3,"sources":["webpack:///./src/components/AuthorCard.tsx","webpack:///./src/components/PostFullFooter.tsx","webpack:///./src/components/PostFullFooterRight.tsx","webpack:///./src/components/icons/infinity.tsx","webpack:///./src/components/ReadNextCard.tsx","webpack:///./src/templates/post.tsx","webpack:///./src/styles/colors.ts","webpack:///./src/styles/shared.ts","webpack:///./src/website-config.ts","webpack:///./src/components/Wrapper.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./src/favicon.ico","webpack:///./src/components/icons/twitter.tsx","webpack:///./src/components/icons/github.tsx","webpack:///./src/components/PostContent.tsx"],"names":["AuthorCardSection","Object","styled_base_browser_esm","target","name","styles","AuthorCardName","colors","darkgrey","AuthorCardContent","midgrey","AuthorCard","_ref","author","core_browser_esm","css","AuthorProfileImage","src","avatar","children","fixed","alt","id","gatsby_browser_entry","to","_","bio","PostFullFoot","PostFullFooter","props","PostFullFooterRightDiv","AuthorCardButton","lighten","blue","PostFullFooterRight","authorId","InfinityIcon","xmlns","viewBox","d","ReadNextCardStyles","coverImage","ReadNextCardHeader","ReadNextCardHeaderSitetitle","ReadNextCardHeaderTitle","ReadNextDivider","ReadNextCardContent","ReadNextCardFooter","ReadNextCard","query","render","header","childImageSharp","fluid","config","title","tags","infinity","relatedPosts","edges","map","n","key","node","frontmatter","fields","slug","totalCount","data","_1676377518","PostTemplate","PostFull","NoImage","PostFullHeader","PostFullMeta","PostFullMetaDate","PostFullTitle","setLightness","PostFullImage","lightgrey","DateDivider","ReadNextFeed","PageTemplate","post","markdownRemark","width","height","image","sizes","split","String","Number","aspectRatio","layouts","className","Helmet","lang","content","subtitle","excerpt","property","siteTitle","siteUrl","pathContext","date","facebook","twitter","Wrapper","css_browser_esm","outer","SiteHeader","inner","SiteNav","SiteMain","dateTime","userDate","value","index","react","gatsby_image_default","a","style","PostContent","htmlAst","postURL","encodeURIComponent","githubFile","slice","length","components_PostFullFooter","components_AuthorCard","components_PostFullFooterRight","components_ReadNextCard","pageContext","prev","PostCard","next","Footer","__webpack_require__","__webpack_exports__","green","purple","yellow","red","whitegrey","pink","brown","SiteTitle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","SiteDescription","PostFeed","PostFeedRaise","SocialLink","darken","SiteHeaderContent","description","logo","github","gitlab","showSubscribe","StyledWrapper","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","GlobalStyles","IndexLayout","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","rel","href","favicon","type","SiteFooter","SiteFooterContent","SiteFooterNav","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_3__","Date","getFullYear","HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","_this","_React$Component","call","this","state","isOpen","_this$props$isHome","isHome","role","_icons_twitter__WEBPACK_IMPORTED_MODULE_7__","_icons_github__WEBPACK_IMPORTED_MODULE_8__","React","PostCardStyles","PostCardImageLink","PostCardImage","PostCardContent","PostCardContentLink","PostCardTags","PostCardTitle","PostCardExcerpt","PostCardMeta","AuthorList","ReadingTime","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","timeToRead","module","exports","p","Twitter","Github","PostFullContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__","setSaturation","renderAst","rehypeReact","createElement","components","Compiler","Ast","ast","_objectWithoutPropertiesLoose","properties","_ref2","_emotion_core__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"component---src-templates-post-tsx-82444ccacd5188e7784b.js","sourcesContent":["import { Link } from 'gatsby';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../styles/colors';\nimport { AuthorProfileImage } from '../styles/shared';\n\nconst AuthorCardSection = styled.section`\n  display: flex;\n`;\n\nconst AuthorCardName = styled.h4`\n  margin: 8px 0 2px 0;\n  padding: 0;\n  font-size: 2rem;\n\n  a {\n    color: ${colors.darkgrey};\n    font-weight: 700;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nconst AuthorCardContent = styled.section`\n  p {\n    margin: 0;\n    color: ${colors.midgrey};\n    line-height: 1.3em;\n  }\n`;\n\nexport interface AuthorCardProps {\n  author: any;\n}\n\nconst AuthorCard: React.FunctionComponent<AuthorCardProps> = ({ author }) => {\n  return (\n    <AuthorCardSection>\n      <img css={AuthorProfileImage} src={author.avatar.children[0].fixed.src} alt={author.id} />\n      <AuthorCardContent>\n        <AuthorCardName>\n          <Link to={`/author/${_.kebabCase(author.id)}/`}>{author.name} - @{author.id}</Link>\n        </AuthorCardName>\n        {author.bio ? (\n          <p>{author.bio}</p>\n        ) : (\n          <p>\n            Read <Link to={`/author/${_.kebabCase(author.id)}/`}>more posts</Link> by this author.\n          </p>\n        )}\n      </AuthorCardContent>\n    </AuthorCardSection>\n  );\n};\n\nexport default AuthorCard;\n","import * as React from 'react';\nimport styled from '@emotion/styled'\n\nconst PostFullFoot = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 auto;\n  padding: 3vw 0 6vw 0;\n  max-width: 840px;\n`;\n\nconst PostFullFooter: React.FunctionComponent = props => <PostFullFoot>{props.children}</PostFullFoot>;\n\nexport default PostFullFooter;\n","import { Link } from 'gatsby';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { lighten } from 'polished';\n\nimport { colors } from '../styles/colors';\n\nconst PostFullFooterRightDiv = styled.div`\n  flex-shrink: 0;\n  margin-left: 20px;\n`;\n\nconst AuthorCardButton = css`\n  display: block;\n  padding: 9px 16px;\n  border: ${lighten('0.2', colors.midgrey)} 1px solid;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1;\n  font-weight: 500;\n  border-radius: 20px;\n  transition: all ease 0.2s;\n\n  :hover {\n    border-color: ${colors.blue};\n    color: ${colors.blue};\n    text-decoration: none;\n  }\n`;\n\nexport interface PostFullFooterRightProps {\n  authorId: string;\n}\n\nconst PostFullFooterRight: React.FunctionComponent<PostFullFooterRightProps> = props => (\n  <PostFullFooterRightDiv>\n    <Link css={AuthorCardButton} to={`/author/${_.kebabCase(props.authorId)}/`}>\n      Read More\n    </Link>\n  </PostFullFooterRightDiv>\n);\n\nexport default PostFullFooterRight;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst InfinityIcon: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5\" />\n  </svg>\n);\nexport default InfinityIcon;\n","import { Link, StaticQuery, graphql } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport * as _ from 'lodash';\n\nimport { colors } from '../styles/colors';\nimport InfinityIcon from './icons/infinity';\nimport config from '../website-config';\n\nexport interface ReadNextCardStylesProps {\n  coverImage: string;\n}\n\nconst ReadNextCardStyles = styled.article`\n  position: relative;\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  padding: 25px;\n  color: #fff;\n  background: ${colors.darkgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  background-image: url(${(props: ReadNextCardStylesProps) => props.coverImage});\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: block;\n    background: linear-gradient(135deg, rgba(0,40,60,0.8) 0%,rgba(0,20,40,0.7) 100%);\n    border-radius: 5px;\n    backdrop-filter: blur(2px);\n  }\n`;\n\nconst ReadNextCardHeader = styled.header`\n  position: relative;\n  z-index: 50;\n  padding-top: 20px;\n  text-align: center;\n`;\n\nconst ReadNextCardHeaderSitetitle = styled.small`\n  display: block;\n  font-size: 1.3rem;\n  line-height: 1.3em;\n  opacity: 0.8;\n`;\n\nconst ReadNextCardHeaderTitle = styled.h3`\n  margin: 0;\n  padding: 0 20px;\n  color: #fff;\n  font-size: 3rem;\n  line-height: 1.2em;\n  letter-spacing: 1px;\n\n  a {\n    color: #fff;\n    font-weight: 300;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ReadNextDivider = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: 80px;\n\n  svg {\n    width: 40px;\n    fill: transparent;\n    stroke: #fff;\n\n    stroke-width: 0.5px;\n    stroke-opacity: 0.65;\n  }\n`;\n\nconst ReadNextCardContent = styled.div`\n  position: relative;\n  z-index: 50;\n  flex-grow: 1;\n  display: flex;\n  font-size: 1.7rem;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0;\n    text-align: center;\n    list-style: none;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n    font-size: 1.6rem;\n    line-height: 1.25em;\n    font-weight: 200;\n    letter-spacing: -0.5px;\n  }\n\n  li a {\n    display: block;\n    padding: 20px 0;\n    border-bottom: rgba(255, 255, 255, 0.3) 1px solid;\n    color: #fff;\n    font-weight: 500;\n    vertical-align: top;\n    transition: opacity 0.3s ease;\n  }\n\n  li:first-of-type a {\n    padding-top: 10px;\n  }\n\n  li a:hover {\n    opacity: 1;\n  }\n`;\n\nconst ReadNextCardFooter = styled.footer`\n  position: relative;\n  margin: 15px 0 3px 0;\n  text-align: center;\n\n  a {\n    color: #fff;\n  }\n`;\n\nexport interface ReadNextProps {\n  tags: string[];\n  relatedPosts: {\n    totalCount: number;\n    edges: {\n      node: {\n        timeToRead: number;\n        frontmatter: {\n          title: string;\n        };\n        fields: {\n          slug: string;\n        };\n      };\n    }[];\n  };\n}\n\nexport interface ReadNextQuery {\n  header: {\n    childImageSharp: {\n      fluid: any;\n    };\n  };\n}\n\nconst ReadNextCard: React.FunctionComponent<ReadNextProps> = props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ReadNextQuery {\n          header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n            childImageSharp {\n              # Specify the image processing specifications right in the query.\n              # Makes it trivial to update as your page's design changes.\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      // tslint:disable-next-line:react-this-binding-issue\n      render={({ header }: ReadNextQuery) => (\n        <ReadNextCardStyles coverImage={header.childImageSharp.fluid.src}>\n          <ReadNextCardHeader>\n            <ReadNextCardHeaderSitetitle>\n              &mdash; {config.title} &mdash;\n            </ReadNextCardHeaderSitetitle>\n            <ReadNextCardHeaderTitle>\n              <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>{props.tags[0]}</Link>\n            </ReadNextCardHeaderTitle>\n          </ReadNextCardHeader>\n          <ReadNextDivider>\n            <InfinityIcon />\n          </ReadNextDivider>\n          <ReadNextCardContent>\n            <ul>\n              {props.relatedPosts.edges.map(n => {\n                return (\n                  <li key={n.node.frontmatter.title}>\n                    <Link to={n.node.fields.slug}>{n.node.frontmatter.title}</Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </ReadNextCardContent>\n          <ReadNextCardFooter>\n            <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>\n              {props.relatedPosts.totalCount > 1 &&\n                `See all ${props.relatedPosts.totalCount} posts`}\n              {props.relatedPosts.totalCount === 1 && `1 post`}\n              {props.relatedPosts.totalCount === 0 && `No posts`} →\n            </Link>\n          </ReadNextCardFooter>\n        </ReadNextCardStyles>\n      )}\n    />\n  );\n};\n\nexport default ReadNextCard;\n","import { graphql, Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\n\nimport AuthorCard from '../components/AuthorCard';\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport PostContent from '../components/PostContent';\nimport PostFullFooter from '../components/PostFullFooter';\nimport PostFullFooterRight from '../components/PostFullFooterRight';\nimport ReadNextCard from '../components/ReadNextCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteHeader, SiteMain } from '../styles/shared';\nimport config from '../website-config';\n\nconst PostTemplate = css`\n  .site-main {\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  margin: 0 auto;\n  padding: 6vw 3vw 3vw;\n  max-width: 1040px;\n  text-align: center;\n\n  @media (max-width: 500px) {\n    padding: 14vw 3vw 10vw;\n  }\n`;\n\nconst PostFullMeta = styled.section`\n  // display: flex;\n  display: block;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.midgrey};\n  font-size: 1.4rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  @media (max-width: 500px) {\n    font-size: 1.2rem;\n    line-height: 1.3em;\n  }\n`;\n\nconst PostFullMetaDate = styled.time`\n  color: ${colors.blue};\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    font-size: 2.9rem;\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 0 -10vw -165px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 0 -4vw -100px;\n    // height: 600px;\n    height: calc(100vw / 16 * 9);\n    border-radius: 0;\n  }\n\n  @media (max-width: 800px) {\n    // height: 400px;\n    height: calc(100vw / 16 * 9);\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    // height: 350px;\n    height: calc(100vw / 16 * 9);\n  }\n`;\n\nconst DateDivider = styled.span`\n  display: inline-block;\n  margin: 0 6px 1px;\n`;\n\nconst ReadNextFeed = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\ninterface PageTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      timeToRead: string;\n      frontmatter: {\n        title: string;\n        subtitle: string;\n        date: string;\n        userDate: string;\n        image: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        tags: string[];\n        author: {\n          name: string;\n          id: string;\n          bio: string;\n          avatar: {\n            children: {\n              fixed: {\n                src: string;\n              };\n            }[];\n          };\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: {\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }[];\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  timeToRead: number;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    image: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    title: string;\n    subtitle: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    category: string[];\n    author: {\n      id: string;\n      bio: string;\n      avatar: {\n        children: {\n          fixed: {\n            src: string;\n          };\n        }[];\n      };\n    };\n  };\n}\n\nconst PageTemplate: React.FunctionComponent<PageTemplateProps> = props => {\n  const post = props.data.markdownRemark;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.image) {\n    width = post.frontmatter.image.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.image.childImageSharp.fluid.aspectRatio);\n  }\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.frontmatter.subtitle || post.excerpt} />\n        <meta property=\"og:site_name\" content={config.siteTitle} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.subtitle || post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.image && (\n          <meta property=\"og:image\" content={config.siteUrl + post.frontmatter.image.childImageSharp.fluid.src} />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.subtitle || post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.image && (\n          <meta name=\"twitter:image\" content={config.siteUrl + post.frontmatter.image.childImageSharp.fluid.src} />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author.id} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && <meta name=\"twitter:site\" content={`@${config.twitter.split('https://twitter.com/')[1]}`} />}\n        {config.twitter && <meta\n          name=\"twitter:creator\"\n          content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n        />}\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header css={[outer, SiteHeader]}>\n          <div css={inner}>\n            <SiteNav />\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader>\n                <PostFullMeta>\n                  <PostFullMetaDate dateTime={post.frontmatter.date}>\n                    {post.frontmatter.userDate}\n                  </PostFullMetaDate>\n                  {/* {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 && (\n                      <>\n                        <DateDivider>/</DateDivider>\n                        <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                          {post.frontmatter.tags[0]}\n                        </Link>\n                      </>\n                    )} */}\n                  {post.frontmatter.tags.map((value, index) => {\n                    return <>\n                      <DateDivider>/</DateDivider>\n                      <Link to={`/tags/${_.kebabCase(value)}/`}>\n                        #{value}\n                      </Link>\n                    </>\n                  })}\n                </PostFullMeta>\n                <PostFullTitle>{post.frontmatter.title}</PostFullTitle>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <Img\n                    style={{ height: '100%' }}\n                    fluid={post.frontmatter.image.childImageSharp.fluid}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst}\n                postURL={encodeURIComponent(config.siteUrl + props.pathContext.slug)}\n                githubFile={`${props.pathContext.slug.slice(\n                  0,\n                  props.pathContext.slug.length - 1\n                )}.md`} />\n\n              <PostFullFooter>\n                <AuthorCard author={post.frontmatter.author} />\n                <PostFullFooterRight authorId={post.frontmatter.author.id} />\n              </PostFullFooter>\n            </article>\n          </div>\n        </main>\n\n        {/* Links to Previous/Next posts */}\n        <aside className=\"read-next\" css={outer}>\n          <div css={inner}>\n            <ReadNextFeed>\n              {props.data.relatedPosts && (\n                <ReadNextCard tags={post.frontmatter.tags} relatedPosts={props.data.relatedPosts} />\n              )}\n\n              {props.pageContext.prev && <PostCard post={props.pageContext.prev} />}\n              {props.pageContext.next && <PostCard post={props.pageContext.next} />}\n            </ReadNextFeed>\n          </div>\n        </aside>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        subtitle\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        author {\n          id\n          name\n          bio\n          avatar {\n            children {\n              ... on ImageSharp {\n                fixed(quality: 90) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 3\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title,\n            subtitle\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","export const colors = {\n  blue: '#3eb0ef',\n  green: '#a4d037',\n  purple: '#ad26b4',\n  yellow: '#fecd35',\n  red: '#f05230',\n  darkgrey: '#15171A',\n  midgrey: '#738a94',\n  lightgrey: '#c5d2d9',\n  whitegrey: '#e5eff5',\n  pink: '#fa3a57',\n  brown: '#a3821a',\n}","import { css } from '@emotion/core';\nimport styled from '@emotion/styled'\nimport { colors } from './colors';\nimport { darken, lighten } from 'polished';\n\nexport const outer = css`\n  position: relative;\n  padding: 0 4vw;\n`;\n\n// Centered content container blocks\nexport const inner = css`\n  margin: 0 auto;\n  max-width: 1040px;\n  width: 100%;\n`;\n\nexport const SiteMain = css`\n  z-index: 100;\n  flex-grow: 1;\n`;\n\nexport const SiteTitle = styled.h1`\n  z-index: 10;\n  margin: 0;\n  padding: 0;\n  font-size: 3.8rem;\n  font-weight: 700;\n`;\n\nexport const SiteDescription = styled.h2`\n  z-index: 10;\n  margin: 0;\n  padding: 5px 0;\n  font-size: 2.2rem;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nexport const PostFeed = css`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\nexport const PostFeedRaise = css`\n  @media (min-width: 900px) {\n    margin-top: -70px;\n    padding-top: 0;\n  }\n`;\n\nexport const SocialLink = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 10px;\n  color: #fff;\n  opacity: 0.8;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    height: 1.8rem;\n    fill: #fff;\n  }\n`;\n\nexport const SiteHeader = css`\n  position: relative;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background: ${darken('0.05', colors.darkgrey)} no-repeat center center;\n  background-size: cover;\n`;\n\nexport const SiteHeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10vw 4vw;\n  min-height: 200px;\n  max-height: 450px;\n  text-align: center;\n`;\n\nexport const SiteHeaderStyles = css`\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  z-index: 10;\n  display: block;\n  height: 80px;\n  background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 10;\n    display: block;\n    background: rgba(0, 0, 0, 0.18);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: auto;\n    left: 0;\n    z-index: 10;\n    display: block;\n    height: 80px;\n    background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n  }\n  @media (max-width: 700px) {\n    padding-right: 0;\n    padding-left: 0;\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n  margin-right: 15px;\n  width: 60px;\n  height: 60px;\n`;\n","export interface WebsiteConfig {\n  title: string;\n  siteTitle: string;\n  description: string;\n  coverImage: string;\n  logo: string;\n  /**\n   * Specifying a valid BCP 47 language helps screen readers announce text properly.\n   * See: https://dequeuniversity.com/rules/axe/2.2/valid-lang\n   */\n  lang: string;\n  /**\n   * blog full path, no ending slash!\n   */\n  siteUrl: string;\n  facebook?: string;\n  github?: string;\n  gitlab?: string;\n  twitter?: string;\n  /**\n   * hide or show all email subscribe boxes\n   */\n  showSubscribe: boolean;\n  /**\n   * create a list on mailchimp and then create an embeddable signup form. this is the form action\n   */\n  mailchimpAction?: string;\n  /**\n   * this is the hidden input field name\n   */\n  mailchimpName?: string;\n}\n\nconst config: WebsiteConfig = {\n  title: 'Code avec Ludo',\n  siteTitle: 'Code avec Ludo',\n  description: 'Trouvez des articles et des tutoriels sur Node, Angular, intégration continue, docker, et plus ...',\n  coverImage: 'img/blog-cover.jpg',\n  logo: 'img/ghost-logo.png',\n  lang: 'fr',\n  siteUrl: 'https://ludovicwyffels.github.io',\n  github: 'https://github.com/ludovicwyffels',\n  gitlab: 'https://gitlab.com/ludovic.wyffels',\n  // twitter: 'https://twitter.com/WYFFELSLudovic',\n  showSubscribe: false,\n  // mailchimpAction: 'https://softwareontheroad.us20.list-manage.com/subscribe/post?u=337d8675485234c707e63777d&amp;id=14f1331817',\n  // mailchimpName: 'b_a81b6927ac288c81b0b7f3a0f_7d717b7d75',\n};\n\nexport default config;\n","import * as React from 'react';\nimport styled from '@emotion/styled'\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface WrapperProps {\n  className?: string;\n}\n\nconst Wrapper: React.FunctionComponent<WrapperProps> = ({ children, className }) => (\n  <StyledWrapper className={className}>{children}</StyledWrapper>\n);\n\nexport default Wrapper;\n","import { Global, css } from '@emotion/core';\nimport { darken, lighten } from 'polished';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { colors } from '../styles/colors';\n// @ts-ignore\nimport favicon from '../../src/favicon.ico';\n\ninterface IndexProps {\n  className?: string;\n}\n\nconst GlobalStyles = css`\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  body {\n    line-height: 1;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  img {\n    max-width: 100%;\n  }\n  html {\n    box-sizing: border-box;\n    font-family: sans-serif;\n\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n  }\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n  a {\n    background-color: transparent;\n  }\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  i,\n  em,\n  dfn {\n    font-style: italic;\n  }\n  h1 {\n    margin: 0.67em 0;\n    font-size: 2em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    position: relative;\n    font-size: 75%;\n    line-height: 0;\n    vertical-align: baseline;\n  }\n  sup {\n    top: -0.5em;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  img {\n    border: 0;\n  }\n  svg:not(:root) {\n    overflow: hidden;\n  }\n  mark {\n    background-color: #fdffb6;\n  }\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    margin: 0;\n    color: inherit;\n    font: inherit;\n  }\n  button {\n    overflow: visible;\n    border: none;\n  }\n  button,\n  select {\n    text-transform: none;\n  }\n  button,\n  html input[type='button'],\n  input[type='reset'],\n  input[type='submit'] {\n    cursor: pointer;\n\n    -webkit-appearance: button;\n  }\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n  input {\n    line-height: normal;\n  }\n  input:focus {\n    outline: none;\n  }\n  input[type='checkbox'],\n  input[type='radio'] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  input[type='search'] {\n    box-sizing: content-box;\n\n    -webkit-appearance: textfield;\n  }\n  input[type='search']::-webkit-search-cancel-button,\n  input[type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  legend {\n    padding: 0;\n    border: 0;\n  }\n  textarea {\n    overflow: auto;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  td,\n  th {\n    padding: 0;\n  }\n\n  html {\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-size: 62.5%;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  body {\n    overflow-x: hidden;\n    color: ${darken('0.25', colors.midgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.5rem;\n    line-height: 1.6em;\n    font-weight: 400;\n    font-style: normal;\n    letter-spacing: 0;\n    text-rendering: optimizeLegibility;\n    background: #fff;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -moz-font-feature-settings: 'liga' on;\n  }\n\n  ::selection {\n    text-shadow: none;\n    background: ${lighten('0.3', colors.blue)};\n  }\n\n  hr {\n    position: relative;\n    display: block;\n    width: 100%;\n    margin: 2.5em 0 3.5em;\n    padding: 0;\n    height: 1px;\n    border: 0;\n    border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n  }\n\n  audio,\n  canvas,\n  iframe,\n  img,\n  svg,\n  video {\n    vertical-align: middle;\n  }\n\n  fieldset {\n    margin: 0;\n    padding: 0;\n    border: 0;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  p,\n  ul,\n  ol,\n  dl,\n  blockquote {\n    margin: 0 0 1.5em 0;\n  }\n\n  ol,\n  ul {\n    padding-left: 1.3em;\n    padding-right: 1.5em;\n  }\n\n  ol ol,\n  ul ul,\n  ul ol,\n  ol ul {\n    margin: 0.5em 0 1em;\n  }\n\n  ul {\n    list-style: disc;\n  }\n\n  ol {\n    list-style: decimal;\n  }\n\n  ul,\n  ol {\n    max-width: 100%;\n  }\n\n  li {\n    margin: 0.5em 0;\n    padding-left: 0.3em;\n    line-height: 1.6em;\n  }\n\n  dt {\n    float: left;\n    margin: 0 20px 0 0;\n    width: 120px;\n    color: ${colors.darkgrey};\n    font-weight: 500;\n    text-align: right;\n  }\n\n  dd {\n    margin: 0 0 5px 0;\n    text-align: left;\n  }\n\n  blockquote {\n    margin: 1.5em 0;\n    padding: 0 1.6em 0 1.6em;\n    border-left: ${colors.whitegrey} 0.5em solid;\n  }\n\n  blockquote p {\n    margin: 0.8em 0;\n    font-size: 1.2em;\n    font-weight: 300;\n  }\n\n  blockquote small {\n    display: inline-block;\n    margin: 0.8em 0 0.8em 1.5em;\n    font-size: 0.9em;\n    opacity: 0.8;\n  }\n\n  blockquote small:before {\n    content: '\\\\2014 \\\\00A0';\n  }\n\n  blockquote cite {\n    font-weight: bold;\n  }\n  blockquote cite a {\n    font-weight: normal;\n  }\n\n  a {\n    color: ${darken('0.05', colors.blue)};\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 0;\n    line-height: 1.15;\n    font-weight: 700;\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin: 0 0 0.5em 0;\n    font-size: 5rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h2 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 2rem;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 1.8rem;\n    }\n  }\n\n  h3 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.8rem;\n    font-weight: 500;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 1.7rem;\n    }\n  }\n\n  h4 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.6rem;\n    font-weight: 500;\n  }\n\n  h5 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  h6 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  body {\n    background: #f4f8fb;\n  }\n\n  \n\n`;\n\nconst IndexLayout: React.FunctionComponent<IndexProps> = props => {\n  return (\n    <div className={props.className}>\n      <Helmet>\n        <link rel=\"icon\" href={favicon} type=\"image/x-icon\" />\n      </Helmet>\n      <Global styles={GlobalStyles} />\n      {props.children}\n    </div>\n  );\n};\n\nexport default IndexLayout;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/privacy\">Privacy</Link>\n          <Link to=\"/terms\">Terms</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n          {config.github && (\n            <a href={config.github} target=\"_blank\" rel=\"noopener noreferrer\">\n              Github\n            </a>\n          )}\n          {config.gitlab && (\n            <a href={config.gitlab} target=\"_blank\" rel=\"noopener noreferrer\">\n              GitLab\n            </a>\n          )}\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// tslint:disable:no-http-string\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Twitter from '../icons/twitter';\nimport Github from '../icons/github';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.25rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.5px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`;\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`;\n\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\ninterface SiteNaveState {\n  isOpen: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps, SiteNaveState> {\n\n  constructor(props: SiteNavProps) {\n    super(props);\n    this.state = { isOpen: false };\n  };\n\n  render() {\n    const { isHome = false } = this.props;\n    return (\n      [ <nav key=\"site-nav\" css={[isHome && HomeNavRaise, SiteNavStyles]}>\n        <SiteNavLeft>\n          <ul css={NavStyles} role=\"menu\">\n            {\n              !isHome && <li role=\"menuitem\">\n                <Link to=\"/\">Home</Link>\n              </li>\n            }\n            <li role=\"menuitem\">\n              <Link to=\"/tags/node-js/\">Node.js</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/tags/dev-ops/\">DevOps</Link>\n            </li>\n\n            <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li>\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n          <SocialLinks>\n            <span css={css`font-size: 1.2em;font-weight: 500;`}> Follow me </span>\n            {config.twitter && (\n              <a\n                css={SocialLink}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )}\n            {config.github && (\n              <a\n                css={SocialLink}\n                href={config.github}\n                title=\"Github\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Github />\n              </a>\n            )}\n          </SocialLinks>\n        </SiteNavRight>\n      </nav>]\n    );\n  }\n}\n\nexport default SiteNav;\n","import { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\n// import { lighten } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\n\nconst PostCardStyles = css`\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  min-height: 300px;\n  background: #fff center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  transition: all 0.5s ease;\n\n  :hover {\n    box-shadow: rgba(39, 44, 49, 0.07) 8px 28px 50px, rgba(39, 44, 49, 0.04) 1px 6px 12px;\n    transition: all 0.4s ease;\n    transform: translate3D(0, -1px, 0) scale(1.02);\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  flex-grow: 1;\n  display: block;\n  padding: 25px 25px 0;\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardTags = styled.span`\n  display: block;\n  margin-bottom: 4px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1.15em;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin-top: 0;\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 0 25px 25px;\n`;\n\nconst AuthorList = styled.ul`\n  display: flex;\n  flex-wrap: wrap-reverse;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\n// const AuthorListItem = styled.li`\n//   position: relative;\n//   flex-shrink: 0;\n//   margin: 0;\n//   padding: 0;\n//\n//   :nth-of-type(1) {\n//     z-index: 10;\n//   }\n//   :nth-of-type(2) {\n//     z-index: 9;\n//   }\n//   :nth-of-type(3) {\n//     z-index: 8;\n//   }\n//   :nth-of-type(4) {\n//     z-index: 7;\n//   }\n//   :nth-of-type(5) {\n//     z-index: 6;\n//   }\n//   :nth-of-type(6) {\n//     z-index: 5;\n//   }\n//   :nth-of-type(7) {\n//     z-index: 4;\n//   }\n//   :nth-of-type(8) {\n//     z-index: 3;\n//   }\n//   :nth-of-type(9) {\n//     z-index: 2;\n//   }\n//   :nth-of-type(10) {\n//     z-index: 1;\n//   }\n//   :hover .author-name-tooltip {\n//     opacity: 1;\n//     transform: translateY(0px);\n//   }\n// `;\n//\n// const AuthorNameTooltip = styled.div`\n//   position: absolute;\n//   bottom: 105%;\n//   z-index: 999;\n//   display: block;\n//   padding: 2px 8px;\n//   color: white;\n//   font-size: 1.2rem;\n//   letter-spacing: 0.2px;\n//   white-space: nowrap;\n//   background: ${colors.darkgrey};\n//   border-radius: 3px;\n//   box-shadow: rgba(39, 44, 49, 0.08) 0 12px 26px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n//   opacity: 0;\n//   transition: all 0.3s cubic-bezier(0.4, 0.01, 0.165, 0.99);\n//   transform: translateY(6px);\n//   pointer-events: none;\n//\n//   @media (max-width: 650px) {\n//     display: none;\n//   }\n// `;\n//\n// const StaticAvatar = css`\n//   display: block;\n//   overflow: hidden;\n//   margin: 0 -5px;\n//   width: 34px;\n//   height: 34px;\n//   border: #fff 2px solid;\n//   border-radius: 100%;\n// `;\n//\n// const AuthorProfileImage = styled.img`\n//   display: block;\n//   width: 100%;\n//   height: 100%;\n//   background: ${lighten('0.1', colors.lightgrey)}\n//   border-radius: 100%;\n//   object-fit: cover;\n// `;\n\nconst ReadingTime = styled.span`\n  flex-shrink: 0;\n  margin-left: 20px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 33px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nexport interface PostCardProps {\n  post: PageContext;\n}\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({ post }) => {\n  return (\n    <article\n      className={`post-card ${!post.frontmatter.image ? 'no-image' : ''}`}\n      css={PostCardStyles}\n    >\n      {post.frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter.image &&\n              post.frontmatter.image.childImageSharp.fluid && (\n                <Img\n                  alt={`${post.frontmatter.title} cover image`}\n                  style={{ height: '100%' }}\n                  fluid={post.frontmatter.image.childImageSharp.fluid}\n                />\n              )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\n          <header className=\"post-card-header\">\n            {post.frontmatter.tags && <PostCardTags>{post.frontmatter.tags[0]}</PostCardTags>}\n            <PostCardTitle>{post.frontmatter.title}</PostCardTitle>\n          </header>\n          <PostCardExcerpt>\n            <p> { post.frontmatter.subtitle }</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <AuthorList>\n            {/*<AuthorListItem>\n              <AuthorNameTooltip className=\"author-name-tooltip\">\n                {post.frontmatter.author.id}\n              </AuthorNameTooltip>\n              <Link css={StaticAvatar} to={`/author/${_.kebabCase(post.frontmatter.author.id)}/`}>\n                <AuthorProfileImage\n                  src={post.frontmatter.author.avatar.children[0].fixed.src}\n                  alt={post.frontmatter.author.id}\n                />\n              </Link>\n            </AuthorListItem>*/}\n          </AuthorList>\n          <ReadingTime>{post.timeToRead > 9 ? post.timeToRead : post.timeToRead + 2} min read</ReadingTime>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nexport default PostCard;\n","module.exports = __webpack_public_path__ + \"static/favicon-36e47e74810a0d8c32a77f495c49cf8e.ico\";","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Twitter: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\n  </svg>\n);\nexport default Twitter;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Github: React.FunctionComponent = () => (\n  <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n  </svg>\n);\nexport default Github;\n","import { lighten, setLightness, darken, setSaturation } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport rehypeReact from 'rehype-react';\n\nimport { colors } from '../styles/colors';\n\nexport const PostFullContent = styled.section`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 100px 0;\n  min-height: 230px;\n  font-family: Georgia, serif;\n  font-size: 2.2rem;\n  line-height: 1.6em;\n  background: #fff;\n\n  @media (max-width: 1170px) {\n    padding: 5vw 7vw 0;\n  }\n  @media (max-width: 800px) {\n    font-size: 1.9rem;\n  }\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 15px;\n    left: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(-5deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 15px;\n    right: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(5deg);\n  }\n\n  h1 {\n    text-align: center;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol,\n  dl,\n  pre,\n  blockquote,\n  .post-full-comments,\n  .footnotes {\n    min-width: 100%;\n  }\n\n  li {\n    word-break: break-word;\n  }\n\n  li p {\n    margin: 0;\n  }\n\n  a {\n    color: #000;\n    word-break: break-word;\n    box-shadow: ${colors.blue} 0 -1px 0 inset;\n  }\n\n  a:hover {\n    color: ${colors.blue};\n    text-decoration: none;\n  }\n\n  strong,\n  em {\n    color: ${darken('0.05', colors.darkgrey)};\n  }\n\n  small {\n    display: inline-block;\n    line-height: 1.6em;\n  }\n\n  li:first-child {\n    margin-top: 0;\n  }\n\n  .gatsby-resp-image-link {\n    box-shadow: none;\n  }\n\n  img,\n  video {\n    display: block;\n    margin: 1.5em auto;\n    max-width: 1040px;\n    height: auto;\n  }\n\n  @media (max-width: 1040px) {\n    img,\n    video {\n      width: 100%;\n    }\n  }\n\n  img[src$='#full'] {\n    max-width: none;\n    width: 100vw;\n  }\n\n  img + br + small {\n    display: block;\n    margin-top: -3em;\n    margin-bottom: 1.5em;\n    text-align: center;\n  }\n\n  iframe {\n    margin: 0 auto !important;\n  }\n\n  blockquote {\n    margin: 0 0 1.5em;\n    padding: 0 1.5em;\n    border-left: #3eb0ef 3px solid;\n    text-align: left;\n    font-size: 0.8em;\n  }\n\n  blockquote p {\n    margin: 0 0 1em 0;\n    color: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    font-style: italic;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n\n  // code {\n  //   padding: 0 5px 2px;\n  //   font-size: 0.8em;\n  //   line-height: 1em;\n  //   //font-weight: 400 !important;\n  //   background: ${colors.whitegrey};\n  //   border-radius: 3px;\n  // }\n\n  // p code {\n  //   word-break: break-word;\n  //   padding-left: 0.5em;\n  //   padding-right: 0.5em;\n  // }\n\n  // pre {\n  //   overflow-x: auto;\n  //   margin: 1.5em 0 3em;\n  //   padding: 20px;\n  //   max-width: 100%;\n  //   border: ${darken('0.01', colors.darkgrey)} 1px solid;\n  //   color: ${colors.whitegrey};\n  //   font-size: 1.4rem;\n  //   line-height: 1.5em;\n  //   background: ${darken('0.03', colors.darkgrey)};\n  //   border-radius: 5px;\n  // }\n\n  // pre code {\n  //   padding: 0;\n  //   font-size: inherit;\n  //   line-height: inherit;\n  //   background: transparent;\n  // }\n\n  // pre code :not(span) {\n  //   color: inherit;\n  // }\n\n  .gatsby-resp-iframe-wrapper {\n    margin: 1.5em 0 3em;\n  }\n\n  hr {\n    margin: 4vw 0;\n  }\n\n  hr:after {\n    content: '';\n    position: absolute;\n    top: -15px;\n    left: 50%;\n    display: block;\n    margin-left: -10px;\n    width: 1px;\n    height: 30px;\n    background: ${lighten('0.1', colors.lightgrey)};\n    box-shadow: #fff 0 0 0 5px;\n    transform: rotate(45deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${setLightness('0.05', colors.darkgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  h1 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 4.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.8rem;\n    }\n  }\n\n  h2 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 3.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 2.6rem;\n    }\n  }\n\n  h3 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h4 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h4 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h5 {\n    display: block;\n    margin: 0.5em 0;\n    padding: 1em 0 1.5em;\n    border: 0;\n    color: ${colors.blue};\n    font-family: Georgia, serif;\n    font-size: 3.2rem;\n    line-height: 1.35em;\n    text-align: center;\n  }\n  @media (min-width: 1180px) {\n    h5 {\n      max-width: 1060px;\n    }\n  }\n  @media (max-width: 500px) {\n    h5 {\n      padding: 0 0 0.5em;\n      font-size: 2.2rem;\n    }\n  }\n\n  h6 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.3rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h6 {\n      font-size: 2rem;\n    }\n  }\n\n  table {\n    display: inline-block;\n    overflow-x: auto;\n    margin: 0.5em 0 2.5em;\n    max-width: 100%;\n    width: auto;\n    border-spacing: 0;\n    border-collapse: collapse;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.6rem;\n    white-space: nowrap;\n    vertical-align: top;\n  }\n\n  table {\n    -webkit-overflow-scrolling: touch;\n    background: radial-gradient(ellipse at left, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 0\n        center,\n      radial-gradient(ellipse at right, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 100% center;\n    background-attachment: scroll, scroll;\n    background-size: 10px 100%, 10px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:first-child {\n    background-image: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:last-child {\n    background-image: linear-gradient(\n      to left,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-position: 100% 0;\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table th {\n    color: ${colors.darkgrey};\n    font-size: 1.2rem;\n    font-weight: 700;\n    letter-spacing: 0.2px;\n    text-align: left;\n    text-transform: uppercase;\n    background-color: ${lighten('0.04', colors.whitegrey)};\n  }\n\n  table th,\n  table td {\n    padding: 6px 12px;\n    border: ${setSaturation('0.05', darken('0.01', colors.whitegrey))} 1px solid;\n  }\n\n  @media (max-width: 500px) {\n    padding: 0;\n    :before {\n      display: none;\n    }\n    :after {\n      display: none;\n    }\n  }\n`;\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  // components: { 'interactive-counter': Counter },\n  components: {},\n}).Compiler;\n\nconst Ast = ({ ast, ...props }: any) => {\n  ast.properties = props;\n  return renderAst(ast);\n};\n\nexport interface PostContentProps {\n  htmlAst: any;\n  postURL: string;\n  githubFile: string;\n}\n\nconst PostContent: React.FunctionComponent<PostContentProps> = ({ htmlAst }) => {\n  return (\n    <PostFullContent className=\"post-full-content\">\n      {/* TODO: this will apply the class when rehype-react is published https://github.com/rhysd/rehype-react/pull/11 */}\n      <Ast className=\"post-content\" ast={htmlAst} />\n      <br />\n    </PostFullContent>\n  );\n};\n\nexport default PostContent;\n"],"sourceRoot":""}