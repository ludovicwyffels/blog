{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js","webpack:///./src/components/pagination/pagination.tsx","webpack:///./src/templates/index.tsx"],"names":["global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","length","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","i","l","parseInt","value","arguments","that","this","valueOf","call","key","keys","split","j","constructor","createHTML","url","Pagination","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","createPaginationObjects","page","increment","Array","from","_","link","index","current","navItems","separator","className","style","container","role","to","rel","previous","fromCharCode","map","item","ellipsis","active","aria-label","next","HomePosts","pageQuery","IndexPage","props","width","data","header","childImageSharp","fluid","sizes","height","Number","aspectRatio","css","lang","config","title","name","content","description","property","siteUrl","src","facebook","googleSiteVerification","twitter","outer","SiteHeader","backgroundImage","inner","logo","maxHeight","fixed","alt","isHome","id","SiteMain","PostFeed","PostFeedRaise","allMarkdownRemark","edges","post","node","frontmatter","draft","fields","slug","children","pageContext"],"mappings":"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","file":"component---src-templates-index-tsx-7f1acb7f40e6978c89e8.js","sourcesContent":["'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport style from './pagination.module.scss';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n}\n\ninterface PaginationNavItem {\n  link?: string;\n  index: number|string;\n  current?: number|boolean;\n  separator?: boolean;\n}\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  const createPaginationObjects = (length: number, page: number, increment = 2) => {\n    return Array.from({ length }, (_, i) => ({\n      link: `/${i + increment}`,\n      index: i + increment,\n      current: page === i + increment,\n    }));\n  };\n\n  let navItems: PaginationNavItem[] = [{\n    link: `/`,\n    index: 1,\n    current: currentPage\n  }];\n  if (numPages <= 5) {\n    navItems = [\n      ...navItems,\n      ...Array.from({ length: numPages - 1 }, (_, i) => ({\n        link: `/${i + 2}`,\n        index: i + 2,\n        current: currentPage === i + 2,\n      })),\n    ];\n  } else if (currentPage <= 3) {\n    // If the current one is closer to the start\n    navItems = [\n      ...navItems,\n      ...createPaginationObjects(3, currentPage),\n      {\n        separator: true,\n        index: 'finisher-separator',\n      },\n      {\n        link: `/${numPages}/`,\n        index: numPages,\n        current: false,\n      },\n    ];\n  } else if (currentPage > numPages -3) {\n    // If the current one is closer to the last one\n    navItems = [\n      ...navItems,\n      {\n        separator: true,\n        index: 'finisher-separator',\n      },\n      ...createPaginationObjects(4, currentPage, numPages - 3),\n    ];\n  } else {\n    navItems = [\n      ...navItems,\n      {\n        separator: true,\n        index: 'starter-separator',\n      },\n      ...createPaginationObjects(3, currentPage, currentPage - 1),\n      {\n        separator: true,\n        index: 'finisher-separator',\n      },\n      {\n        link: `/${numPages}/`,\n        index: numPages,\n        current: false,\n      },\n    ];\n  }\n\n\n  return (\n    <nav className={style.container} role=\"navigation\">\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\" className={style.previous}>\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        <span className=\"pagination-list\">\n          {navItems.map(item => (\n            <span key={item.index}>\n              {item.separator ? (\n                <a className={`${style.ellipsis}`}>&hellip;</a>\n              ) : (\n                <Link\n                  to={item.link || ''}\n                  className={item.index === currentPage ? style.active : ''}\n                  aria-label={`Goto page ${item.index}`}\n                >\n                  {item.index}\n                </Link>\n              )}\n            </span>\n          ))}\n        </span>\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\" className={style.next}>\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import { graphql } from 'gatsby';\nimport * as React from 'react';\nimport { css } from '@emotion/core';\nimport Helmet from 'react-helmet';\n\nimport Footer from '../components/footer/footer';\nimport SiteNav from '../components/header/siteNav/siteNav';\nimport PostCard from '../components/postCard/postCard';\nimport Wrapper from '../components/wrapper/wrapper';\nimport IndexLayout from '../layouts';\nimport config from '../website-config';\nimport Pagination from '../components/pagination/pagination';\n\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n} from '../styles/shared';\nimport { PageContext } from './post';\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card:nth-of-type(6n + 1):not(.no-image) {\n      flex: 1 1 100%;\n      flex-direction: row;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      border-radius: 5px 0 0 5px;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content {\n      flex: 0 1 357px;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) h2 {\n      font-size: 2.6rem;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) p {\n      font-size: 1.8rem;\n      line-height: 1.55em;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content-link {\n      padding: 30px 40px 0;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-meta {\n      padding: 0 40px 30px;\n    }\n  }\n`;\n\nexport interface IndexProps {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n  const width = props.data.header.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n  const height = String(Number(width) / props.data.header.childImageSharp.fluid.aspectRatio);\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fluid.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && <meta name=\"google-site-verification\" content={config.googleSiteVerification} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fluid.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width} />\n        <meta property=\"og:image:height\" content={height} />\n      </Helmet>\n      <Wrapper>\n        <header\n          css={[outer, SiteHeader]}\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.fluid.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteHeaderContent>\n              <SiteTitle>\n                {props.data.logo ? (\n                  <img\n                    style={{ maxHeight: '45px' }}\n                    src={props.data.logo.childImageSharp.fixed.src}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n            <SiteNav isHome />\n          </div>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {props.data.allMarkdownRemark.edges.map(post => {\n                // filter out drafts in production\n                return (\n                  (post.node.frontmatter.draft !== true ||\n                    process.env.NODE_ENV !== 'production') && (\n                    <PostCard key={post.node.fields.slug} post={post.node} />\n                  )\n                );\n              })}\n            </div>\n          </div>\n        </main>\n        {props.children}\n        <Pagination currentPage={props.pageContext.currentPage} numPages={props.pageContext.numPages} />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(maxWidth: 2000) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC },\n      filter: { frontmatter: { draft: { ne: true } } },\n      limit: $limit,\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            category\n            draft\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              name\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}