{"version":3,"sources":["webpack:///./src/pages/404.module.scss","webpack:///./src/pages/404.tsx"],"names":["module","exports","NotFoundPage","props","edges","data","allMarkdownRemark","css","SiteHeader","outer","className","style","siteNavCenter","id","errorTemplate","inner","textAlign","errorCode","errorDescription","errorLink","to","PostFeed","map","node","key","fields","slug","post","pageQuery"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,cAAgB,oCAAoC,UAAY,gCAAgC,iBAAmB,uCAAuC,UAAY,kC,0NC4D7NC,UAtCuC,SAAAC,GAAS,IACrDC,EAAUD,EAAME,KAAKC,kBAArBF,MAER,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,sBAAQG,IAAG,YAAE,CAACC,IAAYC,OACxB,mBAAKC,UAAU,SACb,mBAAKA,UAAWC,IAAMC,eACpB,YAAC,IAAD,SAIN,oBAAMC,GAAG,YAAYH,UAAWC,IAAMG,cAAeP,IAAKE,KACxD,mBAAKF,IAAKQ,KACR,uBAASJ,MAAO,CAAEK,UAAW,WAC3B,kBAAIN,UAAWC,IAAMM,WAArB,OACA,iBAAGP,UAAWC,IAAMO,kBAApB,kBACA,YAAC,OAAD,CAAMR,UAAWC,IAAMQ,UAAWC,GAAG,IAArC,6BAMN,qBAAOb,IAAKE,KACV,mBAAKF,IAAKQ,KACR,mBAAKR,IAAKc,KACPjB,EAAMkB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CAAUC,IAAKD,EAAKE,OAAOC,KAAMC,KAAMJ,aAYhD,IAAMK,EAAY","file":"component---src-pages-404-tsx-96a383ed57eeb271df24.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteNavCenter\":\"_404-module--siteNavCenter--1xW_t\",\"errorTemplate\":\"_404-module--errorTemplate--2Q6Vk\",\"errorCode\":\"_404-module--errorCode--Iss6n\",\"errorDescription\":\"_404-module--errorDescription--1CGfX\",\"errorLink\":\"_404-module--errorLink--3fWWe\"};","import { graphql, Link } from 'gatsby';\nimport * as React from 'react';\n\nimport SiteNavLogo from '../components/header/siteNavLogo/siteNavLogo';\nimport PostCard from '../components/postCard/postCard';\nimport Wrapper from '../components/wrapper/wrapper';\nimport IndexLayout from '../layouts';\nimport { inner, outer, PostFeed, SiteHeader } from '../styles/shared';\nimport { PageContext } from '../templates/post';\n\nimport style from './404.module.scss';\n\ninterface NotFoundTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: PageContext;\n      }[];\n    };\n  };\n}\n\nconst NotFoundPage: React.FC<NotFoundTemplateProps> = props => {\n  const { edges } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout>\n      <Wrapper>\n        <header css={[SiteHeader, outer]}>\n          <div className=\"inner\">\n            <nav className={style.siteNavCenter}>\n              <SiteNavLogo />\n            </nav>\n          </div>\n        </header>\n        <main id=\"site-main\" className={style.errorTemplate} css={outer}>\n          <div css={inner}>\n            <section style={{ textAlign: 'center' }}>\n              <h1 className={style.errorCode}>404</h1>\n              <p className={style.errorDescription}>Page not found</p>\n              <Link className={style.errorLink} to=\"\">\n                Go to the front page â†’\n              </Link>\n            </section>\n          </div>\n        </main>\n        <aside css={outer}>\n          <div css={inner}>\n            <div css={PostFeed}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </aside>\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            category\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              name\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}